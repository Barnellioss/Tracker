{"version":3,"sources":["components/Form.js","redux/types.js","redux/firebaseReducer.js","components/timer/timer.js","components/Notes.js","pages/Home.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["Form","props","useState","value","setValue","date","moment","format","onSubmit","event","preventDefault","trim","createNote","className","type","onChange","e","target","placeholder","ADD_NOTE","FETCH_NOTES","REMOVE_NOTE","STOP_TIMER","RESUME_TIMER","RESET_TIMER","initialState","notes","id","url","fetchNotes","dispatch","a","axios","get","res","payload","Object","keys","data","map","key","firebaseReducer","state","action","filter","note","Stopwatch","timerOn","startStop","stopped","timerStart","timerTime","timerValue","Date","now","startTimer","resumeTimer","setState","setNotes","timer","setInterval","stopTimer","clearInterval","SetTimerValue","resetTimer","this","seconds","Math","floor","slice","minutes","hours","PlayCircleOutlined","style","fontSize","marginBottom","color","onClick","PauseCircleOutlined","marginLeft","UndoOutlined","Component","compose","connect","fireBaseState","put","Notes","React","memo","deleteNote","setDanger","then","itemLayout","dataSource","renderItem","Item","Meta","title","MinusCircleOutlined","Title","Typography","Home","PureComponent","post","name","delete","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfc267fc.chunk.js","sourcesContent":["import moment from 'moment'\r\nimport React, { useState } from 'react'\r\nimport { Input } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport '../styles/index.scss'\r\n\r\n\r\n\r\nconst Form = (props) => {\r\n\r\n  const [value, setValue] = useState('')\r\n  let date = moment().format(\"DD MM YYYY, HH:mm:ss\")\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (value.trim()) {\r\n      props.createNote(value.trim())\r\n      setValue('')\r\n    }\r\n    else {\r\n      props.createNote(date)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"form-group\">\r\n        <Input\r\n          type='text'\r\n          value={value}\r\n          onChange={e => setValue(e.target.value)}\r\n          className=\"form-control\"\r\n          placeholder='Enter Note' />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n\r\n","export const SHOW_ALERT = \"SHOW_ALERT\"\r\nexport const HIDE_ALERT = \"HIDE_ALERT\"\r\nexport const ADD_NOTE = \"ADD_NOTE\"\r\nexport const FETCH_NOTES = \"FETCH_NOTES\"\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\"\r\nexport const REACT_APP_DB_URL = 'https://trackerbase-9239b-default-rtdb.europe-west1.firebasedatabase.app/'\r\nexport const DONE_TASK = 'DONE_TASK'\r\nexport const STOP_TIMER = 'STOP_TIMER'\r\nexport const RESUME_TIMER = 'RESUME_TIMER'\r\nexport const RESET_TIMER = 'RESET_TIMER'\r\n\r\n\r\n\r\n\r\n","import axios from 'axios'\r\nimport moment from 'moment';\r\nimport { ADD_NOTE, FETCH_NOTES, REACT_APP_DB_URL, REMOVE_NOTE, RESUME_TIMER, STOP_TIMER, RESET_TIMER } from './types'\r\n\r\nlet initialState = {\r\n    notes: [],\r\n    id: 0,\r\n}\r\n\r\nconst url = REACT_APP_DB_URL;\r\n\r\n\r\nconst firebaseReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NOTE: return {\r\n            ...state,\r\n            notes: [...state.notes, action.payload]\r\n        }\r\n        case FETCH_NOTES: return {\r\n            ...state,\r\n            notes: action.payload,\r\n        }\r\n        case REMOVE_NOTE: return {\r\n            ...state,\r\n            notes: state.notes.filter(note => note.id !== action.id),\r\n        }\r\n        case STOP_TIMER: return {\r\n            ...state,\r\n            note: { ...action.payload }\r\n        }\r\n        case RESUME_TIMER: return {\r\n            ...state,\r\n            note: { ...action.payload }\r\n        }\r\n        case RESET_TIMER: return {\r\n            ...state,\r\n            note: { ...action.payload }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const fetchNotes = () => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`${url}/notes.json`)\r\n        const payload = Object.keys(res.data || {}).map(key => {\r\n            return {\r\n                ...res.data[key],\r\n                id: key\r\n            }\r\n        })\r\n        dispatch({ type: FETCH_NOTES, payload })/***/\r\n    }\r\n}\r\n\r\nexport const stopTimer = (id, value) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`${url}/notes/${id}.json`)\r\n        let note = res.data\r\n        const payload = { ...note, startStop: [{ date: Date.now(), stopped: true, timerValue: value }] }\r\n        await axios.put(`${url}/notes/${id}.json`, payload)\r\n        dispatch({ type: STOP_TIMER, payload })\r\n    }\r\n}\r\n\r\nexport const resumeTimer = (id) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`${url}/notes/${id}.json`)\r\n        let note = res.data\r\n        const payload = { ...note, startStop: [{ timerValue: note.startStop[0].timerValue, stopped: false, date: Date.now() }] }\r\n        await axios.put(`${url}/notes/${id}.json`, payload)\r\n        dispatch({ type: RESUME_TIMER, payload })\r\n    }\r\n}\r\n\r\n\r\nexport const resetTimer = (id) => {\r\n    return async (dispatch) => {\r\n        const res = await axios.get(`${url}/notes/${id}.json`)\r\n        let note = res.data\r\n        const payload = { ...note, startStop: [{ timerValue: 0, stopped: true, date: Date.now() }] }\r\n        await axios.put(`${url}/notes/${id}.json`, payload)\r\n        dispatch({ type: RESET_TIMER, payload })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addNote = (title) => {\r\n    return async (dispatch) => {\r\n        const note = {\r\n            title, date: moment().format(\"DD MM YYYY, HH:mm:ss\"), startStop: [{ stopped: false, timerValue: 0, date: Date.now() }]\r\n        }\r\n        const res = await axios.post(`${url}/notes.json`, note)\r\n        const payload = {\r\n            ...note,\r\n            id: res.data.name\r\n        }\r\n        dispatch({ type: ADD_NOTE, payload })\r\n    }\r\n}\r\n\r\nexport const removeNote = (id) => {\r\n    return async (dispatch) => {\r\n        await axios.delete(`${url}/notes/${id}.json`)\r\n        dispatch({ type: REMOVE_NOTE, id })\r\n    }\r\n}\r\n\r\n\r\nexport default firebaseReducer;\r\n\r\n","import React, { Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport \"./timer.css\";\r\nimport { PlayCircleOutlined, PauseCircleOutlined, UndoOutlined } from '@ant-design/icons';\r\nimport { fetchNotes, resetTimer, resumeTimer, stopTimer } from '../../redux/firebaseReducer'\r\n\r\nclass Stopwatch extends Component {\r\n  state = {\r\n    timerOn: this.props.note.startStop[0].stopped,\r\n    timerStart: 0,\r\n    timerTime: this.props.note.startStop[0].stopped ? this.props.note.startStop[0].timerValue : this.props.note.startStop[0].timerValue + Date.now() - this.props.note.startStop[0].date,\r\n    note: this.props.note,\r\n  };\r\n\r\n\r\n  startTimer = () => {\r\n    this.props.resumeTimer(this.state.note.id)\r\n    this.setState({\r\n      timerOn: true,\r\n      timerTime: this.state.timerTime,\r\n      timerStart: Date.now() - this.state.timerTime\r\n    });\r\n    this.props.setNotes()\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        timerTime: Date.now() - this.state.timerStart\r\n      });\r\n    }, 10);\r\n  };\r\n\r\n\r\n  stopTimer = () => {\r\n    this.setState({ timerOn: false });\r\n    clearInterval(this.timer);\r\n    this.props.SetTimerValue(this.state.note.id, this.state.timerTime)\r\n    this.props.setNotes()\r\n  };\r\n\r\n  resetTimer = () => {\r\n    this.props.resetTimer(this.state.note.id)\r\n    this.setState({\r\n      timerStart: 0,\r\n      timerTime: 0\r\n    });\r\n    this.props.setNotes()\r\n  };\r\n\r\n  render() {\r\n    const { timerTime } = this.state;\r\n    let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n    let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n    return (\r\n      <div className=\"Stopwatch\">\r\n        <div className=\"Stopwatch-display\">\r\n          {hours} : {minutes} : {seconds}\r\n        </div>\r\n        <div className=\"Stopwatch-btns\">\r\n          {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n            <PlayCircleOutlined style={{ fontSize: '18px', marginBottom: '1', color: '#000' }} onClick={this.startTimer} />\r\n          )}\r\n          {this.state.timerOn === true && (\r\n            <PauseCircleOutlined style={{ fontSize: '18px', marginLeft: \"auto\", marginBottom: '1', color: '#000' }} onClick={this.stopTimer} />\r\n          )}\r\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n            <PlayCircleOutlined style={{ fontSize: '18px', marginBottom: '1', color: '#000' }} onClick={this.startTimer} />\r\n          )}\r\n          {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n            <UndoOutlined style={{ fontSize: '18px', marginBottom: 1, color: '#000' }} onClick={this.resetTimer} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    notes: state.fireBaseState.notes\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { setNotes: fetchNotes, SetTimerValue: stopTimer, resumeTimer: resumeTimer, resetTimer: resetTimer }))(Stopwatch);","import React, { useState } from 'react'\r\nimport { List } from 'antd';\r\nimport Stopwatch from './timer/timer'\r\nimport \"../styles/index.scss\"\r\nimport { MinusCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const Notes = React.memo(({ notes, deleteNote }) => {\r\n\r\n    const [value, setDanger] = useState('')\r\n\r\n    if (value.trim()) {\r\n        deleteNote(value).then(() => setDanger(''))\r\n    }\r\n\r\n\r\n    return (\r\n        <List\r\n            itemLayout=\"horizontal\"\r\n            dataSource={notes}\r\n            renderItem={note => (\r\n                <List.Item className='note note-enter-active'>\r\n                    <div className=\"paragraph\">\r\n                        {note.startStop[0].stopped ?\r\n                            <List.Item.Meta\r\n                                className=\"list-group-item\"\r\n                                title={<p style={{ color: '#000' }}>{note.title}</p>}\r\n                            />\r\n                            :\r\n                            <List.Item.Meta\r\n                                className=\"list-group-item\"\r\n                                title={<p style={{ color: '#59B87D' }}>{note.title}</p>}\r\n                            />\r\n                        }\r\n                    </div>\r\n                    <Stopwatch note={note} />\r\n                    <MinusCircleOutlined style={{ fontSize: '18px', color: '#D46F7F' }} className=\"delete__btn\" onClick={() => setDanger(note.id)} type=\"button\" />\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n}\r\n)\r\n\r\n","import React, { Fragment, PureComponent, } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport Form from '../components/Form'\r\nimport { Notes } from '../components/Notes'\r\nimport { addNote, fetchNotes, removeNote } from '../redux/firebaseReducer'\r\nimport { Typography } from 'antd';\r\nimport '.././styles/index.scss';\r\n\r\n\r\nconst { Title } = Typography;\r\n\r\nclass Home extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.setNotes()\r\n        // eslint-disable-next-line\r\n    }\r\n\r\n    componentWillUnmount(){}\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Title className=\"header\">Tracker</Title>\r\n                <Form createNote={this.props.createNote} />\r\n                <hr />\r\n                <Notes notes={this.props.notes} deleteNote={this.props.deleteNote}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        notes: state.fireBaseState.notes\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, { setNotes: fetchNotes, createNote: addNote, deleteNote: removeNote }))(Home)","import React from 'react'\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"container pt-4\">\n      <div>\n        <Home/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore } from 'redux'\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport firebaseReducer from './firebaseReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    fireBaseState: firebaseReducer, \r\n})\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nwindow.store = store\r\n\r\nexport default store;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}